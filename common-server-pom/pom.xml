<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.nenita</groupId>
	<artifactId>common-server-pom</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<!-- Change this to WAR packaging in the child POM -->
	<packaging>pom</packaging>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.5.RELEASE</version>
	</parent>

	<properties>
		<lib.version>1.0.0-SNAPSHOT</lib.version>
		<java.version>1.8</java.version>
		<tomcat.version>8.0.3</tomcat.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.nenita</groupId>
				<artifactId>spring-lib-pom</artifactId>
				<version>${lib.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.nenita</groupId>
				<artifactId>util-lib-pom</artifactId>
				<version>${lib.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.nenita</groupId>
				<artifactId>common-internal-pom</artifactId>
				<version>${lib.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.nenita</groupId>
				<artifactId>all-internal-pom</artifactId>
				<version>${lib.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<!-- Version is from the imported dependency above -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-neo4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>

		<!-- Spring Boot dependencies, inherited version from Parent -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- tag::actuator[] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<!-- Needed to support AWS own Tomcat when deployed in EC2 -->
			<scope>provided</scope>
		</dependency>
		<!-- end::actuator[] -->

		<!-- tag::tests[] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- Where to put the releases/snapshots of this. Uncomment if you want 
		mvn clean deploy to work -->
	<!-- <repositories> <repository> 
		<id>archiva.snapshots</id> <name>Internal Snapshot Repository</name> <url>http://ec2-52-24-129-218.us-west-2.compute.amazonaws.com:8080/repository/snapshots/</url> 
		</repository> </repositories> -->
</project>
